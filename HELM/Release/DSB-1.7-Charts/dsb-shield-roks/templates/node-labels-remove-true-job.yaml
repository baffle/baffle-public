apiVersion: batch/v1
kind: Job
metadata:
  name: labeller-remove-true
  annotations:
      "helm.sh/hook": "post-delete"
      "helm.sh/hook-delete-policy": "hook-succeeded"
spec:
  template:
    spec:
      serviceAccountName: label-updater
      containers:
      - name: labeller
        image: icr.io/data-security-broker/labeller
        {{ $ClusterVersion := index (lookup "config.openshift.io/v1" "ClusterVersion" "" "").items 0 "status" "desired" "version" }}
        {{ if or (contains "4.11" $ClusterVersion ) (contains "4.12" $ClusterVersion ) (contains "4.13" $ClusterVersion ) }}
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          capabilities:
            drop: ["ALL"]
          seccompProfile:
            type: RuntimeDefault
        {{ end }}
        {{ if or (contains "4.9" $ClusterVersion) (contains "4.10" $ClusterVersion) }}
        {{ end }}
        command: ["/bin/sh", "-c"]
        args:
          - |
            sleep 120
            labels=$(kubectl get nodes -o jsonpath='{range .items[*]}{.metadata.name}: {.metadata.labels}{"\n"}{end}')
            # Loop through each line in the output
            while read -r line; do
              # Extract the node name and labels
              node_name=$(echo "$line" | cut -d ':' -f 1)
              node_labels=$(echo "$line" | cut -d ':' -f 2-)

              # Check if the "dsb-shield" label is present
              if echo "$node_labels" | grep -q "dsb-shield"; then
                echo "dsb-shield label found on $node_name"
                exit 0
              else
                # Delete the "data-security-broker" label if it exists
                if echo "$node_labels" | grep -q "data-security-broker"; then
                  kubectl label nodes "$node_name" data-security-broker-
                  echo "Deleted data-security-broker label on $node_name"
                fi
              fi
            done <<< "$labels"

      restartPolicy: Never
  backoffLimit: 4
AWSTemplateFormatVersion: "2010-09-09"
Description: "This template creates a policy, a group and attaches the policy to the group"
Resources:
  BaffleCFCreateInfraGroup:
    Type: "AWS::IAM::Group"

  BaffleCFCreateInfraPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      Description: "IAM policy for managing resources"
      Groups:
        - !Ref BaffleCFCreateInfraGroup
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "cloudformation:*"
            Resource: "*"
          - Effect: "Allow"
            Action:
              - "ec2:CreateVpc"
              - "ec2:DeleteVpc"
              - "ec2:DescribeVpcs"
              - "ec2:CreateSubnet"
              - "ec2:DeleteSubnet"
              - "ec2:DescribeSubnets"
              - "ec2:CreateInternetGateway"
              - "ec2:DeleteInternetGateway"
              - "ec2:AttachInternetGateway"
              - "ec2:DescribeInternetGateways"
              - "ec2:CreateRoute"
              - "ec2:DeleteRoute"
              - "ec2:CreateRouteTable"
              - "ec2:DeleteRouteTable"
              - "ec2:AssociateRouteTable"
              - "ec2:DescribeRouteTables"
              - "ec2:RunInstances"
              - "ec2:ModifyVpcAttribute"
              - "ec2:DescribeAvailabilityZones"
              - "ec2:DescribeSecurityGroups"
              - "ec2:CreateSecurityGroup"
              - "ec2:DeleteSecurityGroup"
              - "ec2:AuthorizeSecurityGroupIngress"
              - "ec2:DetachInternetGateway"
              - "ec2:RevokeSecurityGroupIngress"
              - "ec2:DescribeInstances"
              - "ec2:TerminateInstances"
              - "ec2:DisassociateRouteTable"
              - "ec2:CreateKeyPair"
              - "ec2:DeleteKeyPair"
              - "ec2:DescribeKeyPairs"
            Resource: "*"
          - Effect: "Allow"
            Action:
              - "s3:CreateBucket"
              - "s3:DeleteBucket"
              - "s3:ListBucket"
              - "s3:GetBucketLocation"
              - "s3:GetBucketPolicy"
              - "s3:PutBucketPolicy"
              - "s3:DeleteBucketPolicy"
            Resource: "*"
          - Effect: "Allow"
            Action:
              - "rds:CreateDBInstance"
              - "rds:DeleteDBInstance"
              - "rds:DescribeDBInstances"
              - "rds:CreateDBSubnetGroup"
              - "rds:DeleteDBSubnetGroup"
              - "rds:DescribeDBSubnetGroups"
              - "rds:CreateDBParameterGroup"
              - "rds:DeleteDBParameterGroup"
              - "rds:DescribeEngineDefaultParameters"
              - "rds:ModifyDBParameterGroup"
            Resource: "*"
          - Effect: "Allow"
            Action:
              - "secretsmanager:CreateSecret"
              - "secretsmanager:DeleteSecret"
              - "secretsmanager:GetSecretValue"
              - "secretsmanager:GetRandomPassword"
            Resource: "*"
          - Effect: "Allow"
            Action:
              - "kms:Create*"
              - "kms:Describe*"
              - "kms:Enable*"
              - "kms:List*"
              - "kms:Put*"
              - "kms:Update*"
              - "kms:Revoke*"
              - "kms:Disable*"
              - "kms:Get*"
              - "kms:Delete*"
              - "kms:TagResource"
              - "kms:UntagResource"
              - "kms:ScheduleKeyDeletion"
              - "kms:CancelKeyDeletion"
            Resource: "*"
          - Effect: "Allow"
            Action:
              - "iam:CreateRole"
              - "iam:DeleteRole"
              - "iam:PutRolePolicy"
              - "iam:DeleteRolePolicy"
              - "iam:GetRole"
              - "iam:CreateInstanceProfile"
              - "iam:DeleteInstanceProfile"
              - "iam:AddRoleToInstanceProfile"
              - "iam:RemoveRoleFromInstanceProfile"
              - "iam:PassRole"
            Resource: "*"
          - Effect: "Allow"
            Action:
              - "dms:CreateReplicationSubnetGroup"
              - "dms:DeleteReplicationSubnetGroup"
              - "dms:DescribeReplicationSubnetGroups"
              - "dms:CreateEndpoint"
              - "dms:DeleteEndpoint"
              - "dms:DescribeEndpoints"
              - "dms:CreateReplicationTask"
              - "dms:DeleteReplicationTask"
              - "dms:CreateReplicationInstance"
              - "dms:DeleteReplicationInstance"
              - "dms:DescribeReplicationInstances"
              - "dms:DescribeReplicationTasks"
              - "dms:AddTagsToResource"
              - "dms:RemoveTagsFromResource"
            Resource: "*"
          - Effect: "Allow"
            Action:
              - "lambda:CreateFunction"
              - "lambda:DeleteFunction"
              - "lambda:GetFunction"
              - "lambda:InvokeFunction"
            Resource: "*"
          - Effect: "Allow"
            Action:
              - "logs:CreateLogGroup"
              - "logs:DeleteLogGroup"
              - "logs:PutRetentionPolicy"
            Resource: "*"
          - Effect: "Allow"
            Action:
              - "ssm:PutParameter"
              - "ssm:DeleteParameter"
            Resource: "*"
Outputs:
  BaffleCFCreateInfraGroupOutput:
    Description: "Name of the group"
    Value: !Ref BaffleCFCreateInfraGroup
